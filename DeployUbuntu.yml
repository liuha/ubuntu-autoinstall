---
- hosts: localhost
  name: Deployubuntu.yml
  gather_facts: false
  vars:
    tempdir: /tmp                                       # Temp directory on the Ansible Controller
    workingdir: /tmp/ubuntu20                           # Working directory on the Ansible Controller
    ubuntuiso: ubuntu-20.04.2-live-server-amd64.iso     # ubuntu ISO filename
    ubuntuiso_url: https://releases.ubuntu.com/20.04/   # ubuntu ISO URL
    ubuntunewiso: ubuntu2004.iso                        # ubuntu custom ISO name
    vcenterserver: vcenter.demo.local                   # vCenter FQDN
    vcenteruser: administrator@vsphere.local            # vCenter username
    vcenterpassword: VMware1!                           # vCenter password
    datacenter: SDDC                                    # vCenter datacenter
    vspherecluster: Lab-Cluster                         # vCenter cluster
    vmfolder: Management                                # vCenter VM folder
    datastore: Shared_VMs                               # vSphere datastore
    datastoredir: /SDDCLab-ISO-Folder                   # vSphere datastore ISO directory
    ubuntuvmname: demo-server                           # ubuntu VM name of the virtual machine
    ubuntuvmdisksize: 50                                # ubuntu VM disksize in gigabytes
    ubuntuvmmemorysize: 2048                            # ubuntu VM memory size in megabytes
    ubuntuvvmcpus: 1                                    # ubuntu VM number of CPUs
    ubuntuvmcpucores: 1                                 # ubuntu VM number of cores
    ubuntuvmportgroup: VLAN-301                         # ubuntu VM vSphere portgroup
    ubuntuoslocale: en_US                               # ubuntu OS locale
    ubuntuoskeyboardlayout: en                          # ubuntu OS keyboard layout
    ubuntuoskeyboardvariant: us                         # ubuntu OS keyboard variant
    ubuntuosipv4address: 10.203.0.50/24                 # ubuntu OS IPv4 address
    ubuntuosipv4gateway: 10.203.0.1                     # ubuntu OS IPv4 gateway
    ubuntuosipv4dns: 10.203.0.5                         # ubuntu OS DNS server
    ubuntuossearchdomain: sddc.lab                      # ubuntu OS DNS search domain
    ubuntuoshostname: demo-server                       # ubuntu OS hostname
    ubuntuosuser: ubuntu                                # ubuntu OS username
    ubuntuospassword: VMware1!                          # ubuntu OS password

  tasks:
    - name: Create working directory on Ansible Controller
      ansible.builtin.file:
        path: "{{ workingdir }}"
        state: directory
        mode: "666"


    - name: Check if ubuntu ISO exists locally on Ansible Controller
      ansible.builtin.stat:
        path: "{{ tempdir }}/{{ ubuntuiso }}"
      register: installerfilecheck


    - name: Download ubuntu ISO (if ISO file doesn't exist locally)
      ansible.builtin.get_url:
        url: "{{ ubuntuiso_url }}{{ ubuntuiso }}"
        dest: "{{ tempdir }}/{{ ubuntuiso }}"
        mode: "666"
      when:
        - not installerfilecheck.stat.exists


    - name: Mount ubuntu ISO
      ansible.posix.mount:
        path: "{{ workingdir }}/iso"
        src: "{{ tempdir }}/{{ ubuntuiso }}"
        fstype: iso9660
        opts: ro,noauto
        state: mounted

    - name: Copy txt.cfg from ubuntu ISO
      ansible.builtin.copy:
        src: "{{ workingdir }}/iso/isolinux/txt.cfg"
        dest: "{{ workingdir }}/isocopy/isolinux/"
        mode: "666"


    - name: Edit txt.cfg to modify append line
      ansible.builtin.replace:
        dest: "{{ workingdir }}/isocopy/isolinux/txt.cfg"
        regexp: 'append   initrd=/casper/initrd quiet  ---'
        replace: 'append   initrd=/casper/initrd quiet --- autoinstall ds=nocloud;s=/cdrom/autoinstall/'


    - name: Create directory to store user-data and meta-data
      ansible.builtin.file:
        path: "{{ workingdir }}/isocopy/autoinstall"
        state: directory
        mode: "666"


    - name: Copy user-data file to directory
      ansible.builtin.template:
        src: ./ubuntu_user-data.j2
        dest: "{{ workingdir }}/isocopy/autoinstall/user-data"
        mode: "666"


    - name: Create empty meta-data file in directory
      ansible.builtin.file:
        path: "{{ workingdir }}/isocopy/autoinstall/meta-data"
        state: touch
        mode: "666"


    - name: Create custom ubuntu ISO
      ansible.builtin.command: "xorrisofs -relaxed-filenames -J -R -o {{ tempdir }}/{{ ubuntunewiso }}\
                               -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table\
                               {{ workingdir }}/iso/{{ workingdir }}/isocopy/"
      args:
        chdir: "{{ workingdir }}/isocopy/"
      changed_when: false


    - name: Unmount ubuntu ISO
      ansible.posix.mount:
        path: "{{ workingdir }}/iso"
        src: "{{ tempdir }}/{{ ubuntuiso }}"
        fstype: iso9660
        opts: ro,noauto
        state: absent


    - name: Upload the custom ubuntu ISO to the vSphere datastore
      community.vmware.vsphere_copy:
        hostname: "{{ vcenterserver }}"
        username: "{{ vcenteruser }}"
        password: "{{ vcenterpassword }}"
        validate_certs: false
        datacenter: "{{ datacenter }}"
        src: "{{ tempdir }}/{{ ubuntunewiso }}"
        datastore: "{{ datastore }}"
        path: "{{ datastoredir }}/{{ ubuntunewiso }}"


    - name: Deploy ubuntu VM
      community.vmware.vmware_guest:
        hostname: "{{ vcenterserver }}"
        username: "{{ vcenteruser }}"
        password: "{{ vcenterpassword }}"
        validate_certs: false
        name: "{{ ubuntuvmname }}"
        state: poweredon
        guest_id: ubuntu64Guest
        cluster: "{{ vspherecluster }}"
        datacenter: "{{ datacenter }}"
        folder: "{{ vmfolder }}"
        disk:
          - size_gb: "{{ ubuntuvmdisksize }}"
            type: thin
            datastore: "{{ datastore }}"
        hardware:
          memory_mb: "{{ ubuntuvmmemorysize }}"
          num_cpus: "{{ ubuntuvvmcpus }}"
          num_cpu_cores_per_socket: "{{ ubuntuvmcpucores }}"
          scsi: paravirtual
        networks:
          - name: "{{ ubuntuvmportgroup }}"
            device_type: vmxnet3
        cdrom:
          - controller_number: 0
            unit_number: 0
            type: iso
            iso_path: "[{{ datastore }}] {{ datastoredir }}/{{ ubuntunewiso }}"
            state: present
        annotation: |
                    *** Auto-Deployed by Ansible ***
                    Username: {{ ubuntuosuser }}
                    Password: {{ ubuntuospassword }}


    - name: Start checking if the ubuntu VM is ready
      community.vmware.vmware_guest_info:
        hostname: "{{ vcenterserver }}"
        username: "{{ vcenteruser }}"
        password: "{{ vcenterpassword }}"
        datacenter: "{{ datacenter }}"
        validate_certs: false
        name: "{{ ubuntuvmname }}"
        schema: vsphere
      register: vm_facts
      until: vm_facts.instance.guest.hostName is search(ubuntuoshostname)
      retries: 30
      delay: 60


    - name: Set password for the ubuntu user
      community.vmware.vmware_vm_shell:
        hostname: "{{ vcenterserver }}"
        username: "{{ vcenteruser }}"
        password: "{{ vcenterpassword }}"
        validate_certs: false
        vm_id: "{{ ubuntuvmname }}"
        vm_username: "{{ ubuntuosuser }}"
        vm_password: VMware1!
        vm_shell: /usr/bin/echo
        vm_shell_args: "'{{ ubuntuosuser }}:{{ ubuntuospassword }}' | sudo chpasswd"


    - name: Copy network configuration file to working directory
      ansible.builtin.template:
        src: ./ubuntu_Netplan.j2
        dest: "{{ workingdir }}/00-installer-config.yaml"
        mode: "666"


    - name: Copy network configuration file to ubuntu VM
      community.vmware.vmware_guest_file_operation:
        hostname: "{{ vcenterserver }}"
        username: "{{ vcenteruser }}"
        password: "{{ vcenterpassword }}"
        validate_certs: false
        vm_id: "{{ ubuntuvmname }}"
        vm_username: "{{ ubuntuosuser }}"
        vm_password: VMware1!
        copy:
          src: "{{ workingdir }}/00-installer-config.yaml"
          dest: "/home/{{ ubuntuosuser }}/00-installer-config.yaml"


    - name: Move network configuration file to right location on ubuntu VM
      community.vmware.vmware_vm_shell:
        hostname: "{{ vcenterserver }}"
        username: "{{ vcenteruser }}"
        password: "{{ vcenterpassword }}"
        validate_certs: false
        vm_id: "{{ ubuntuvmname }}"
        vm_username: "{{ ubuntuosuser }}"
        vm_password: VMware1!
        vm_shell: /usr/bin/sudo
        vm_shell_args: "mv /home/{{ ubuntuosuser }}/00-installer-config.yaml /etc/netplan/00-installer-config.yaml"


    - name: Appply the network configuration on ubuntu VM
      community.vmware.vmware_vm_shell:
        hostname: "{{ vcenterserver }}"
        username: "{{ vcenteruser }}"
        password: "{{ vcenterpassword }}"
        validate_certs: false
        vm_id: "{{ ubuntuvmname }}"
        vm_username: "{{ ubuntuosuser }}"
        vm_password: VMware1!
        vm_shell: /usr/bin/sudo
        vm_shell_args: netplan apply


    - name: Delete working directory on Ansible Controller
      ansible.builtin.file:
        path: "{{ workingdir }}"
        state: absent
